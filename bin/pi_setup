#!/bin/sh


get_timestamp() {
  echo "00000000"
}

basic_setup() {
  if [ `cat /home/pi/.bashrc | grep "setxkbmap us" | wc -l ` -lt 1 ]; then
    echo "setxkbmap us" >> /home/pi/.bashrc
  fi
}

## Basic UI/X11 desktop customization
ui() {
  echo "$0: `get_timestamp`: customizing UI"
  apt-get install -y  xterm
  sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/g' ~/.bashrc
}

## Install needed packages to operate as a USB camera platform/controller
usb_camera() {
  echo "$0: `get_timestamp`: Installing USB camera packages"
  apt-get install -y  guvcview
  apt-get install -y  fswebcam     
  #fswebcam image.jpg
}

## Change the password for "pi".  Never got this to work
change_pi_password() {
  # Read the password 
  if [ ! -r ~/.pi_secret ]; then
    echo -e "\n$0: ERROR: Cannot find file ~/.pi_secret"
    exit 1
  fi
  password=`cat ~/.pi_secret`
  sudo echo "pi:$password" | chpasswd
  
}

setup_git() {
  git config --global user.email "anon@github.com"
  git config --global user.name "anonymous" 
}

## Delete all running containers
docker_clean() {
  docker rm `docker ps -a | awk '{print $1}' | grep -v CONTAINER | xargs`
}

## Validate the Docker installation     
test_docker() {
  # Create a build folder, with a single Dockerfile in it
  if [ ! -w /var/tmp/docker_project ]; then mkdir /var/tmp/docker_project; fi
  cd /var/tmp/docker_project
  echo "FROM resin/rpi-raspbian:latest\n\
  RUN echo 'echo !!!!!!!!!!!!!!!!!!!!!!!!!  TEST SUCCESSFUL  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!' > /var/tmp/test\n\
  RUN chmod ugo+rx /var/tmp/test\n" >/var/tmp/docker_project/Dockerfile
  docker build -t delete-me:0.1 .
  docker run -it --rm  delete-me:0.1 /var/tmp/test
  docker rmi delete-me:0.1
  rm -rf /var/tmp/docker_project
}

## Setup this node as a Docker host
docker_host() {
  # Set git user
  setup_git
  # TO DO: Validate external network connectivity
  # Check for a Docker installation
  docker_version=$(docker --version 2>&1)
  if [ `echo "$docker_version" | grep "not found" | wc -l` -eq 0 ]; then
    # Docker is installed
    echo "Docker is installed, version=$docker_version"
    #sudo apt-get remove docker docker-engine docker.io docker-ce
  else
    echo "$0: No Docker version detected.  Installing Docker."
    curl -fsSL get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
  fi
  if [ `id | grep docker | wc -l ` -lt 1 ]; then
    sudo adduser pi docker
  fi
  # Hack for this issue: https://github.com/moby/moby/issues/35587  Doesn't seem to affect Jessie
  if [ `grep "cgroup_memory=1" /boot/cmdline.txt | wc -l ` -lt 1 ]; then
    sudo sed -i 's/$/ cgroup_enable=memory cgroup_memory=1 /' /boot/cmdline.txt
  fi
  # The pip method seemed to be the best to install docker-compose
  sudo apt-get install -y python-pip
  sudo pip install docker-compose
  # This method doesn't work yet, recommended by the compose page on docs.docker.com
  #sudo curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

}

## Update the OS
install_updates() {
  #TO DO: Verify network connectivity
  sudo apt-get update
  sudo apt-get dist-upgrade
}

# to do check for sudo
#install_updates
#basic_setup
#apt-get update -y
#ui
#usb_camera
#docker_host
#test_docker

